name: CI/CD for Discord Role Selector Bot

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.11
              uses: actions/setup-python@v4
              with:
                  python-version: 3.11
            - name: Install flake8
              run: |
                  pip install flake8
            - name: Lint with flake8
              run: |
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    test:
        name: Test
        needs: lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.11
              uses: actions/setup-python@v4
              with:
                  python-version: 3.11
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Install pytest
              run: |
                  pip install pytest
            - name: Test with pytest
              run: |
                  pytest

    deploy:
        name: Deploy to AWS Lightsail
        needs: test
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        runs-on: ubuntu-latest
        steps:
            - uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.LIGHTSAIL_HOST }}
                  username: ${{ secrets.LIGHTSAIL_USERNAME }}
                  key: ${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}
                  script: |
                      cd /home/ec2-user/discord-role-selector-bot
                      git pull origin master
                      ./build.sh
                      ./start_app.sh
                      export SMTP_SMARTHOST="${{ secrets.SMTP_SMARTHOST }}"
                      export SMTP_FROM="${{ secrets.SMTP_FROM }}"
                      export SMTP_USERNAME="${{ secrets.SMTP_USERNAME }}"
                      export SMTP_PASSWORD="${{ secrets.SMTP_PASSWORD }}"
                      .prometheus/start.sh
